{"ast":null,"code":"import ApiUrl from '../js/ApiUrl.js';\nimport { v4 as uuidv4 } from 'uuid';\nconst addOrder = async props => {\n  const token = localStorage.getItem(\"token\");\n  if (!token) return;\n  try {\n    // Получение номера заказа\n    const numberOrderResponse = await fetch(`${ApiUrl}/api/NumberOrder`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    if (!numberOrderResponse.ok) {\n      throw new Error(`Ошибка HTTP: ${numberOrderResponse.status}`);\n    }\n    const numberOrder = await numberOrderResponse.text(); // Предполагаем, что ответ текстовый\n\n    // Получение GUID пользователя\n    const userResponse = await fetch(`${ApiUrl}/api/DefineUserGuidId`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token\n      })\n    });\n    if (!userResponse.ok) {\n      throw new Error(`Ошибка HTTP: ${userResponse.status}`);\n    }\n    const userData = await userResponse.json();\n    const guidId = userData.message;\n    if (!guidId) {\n      throw new Error(\"GUID пользователя не найден в ответе\");\n    }\n    const orderGuidId = uuidv4(); // Уникальный идентификатор заказа\n\n    // Формирование данных для отправки\n    const items = props.map(item => ({\n      GuidIdUser: guidId,\n      GuidIdOrder: orderGuidId,\n      GuidIdItem: item.guidId,\n      VendorCode: item.vendorCode,\n      NameItem: item.name,\n      PriceItem: parseInt(item.price, 10),\n      ImageItem: item.image,\n      QuantityItem: parseInt(item.quantity, 10),\n      NumberOrder: parseInt(numberOrder)\n    }));\n    console.log(\"Отправляемые на сервер данные\" + JSON.stringify(items));\n\n    // Отправка данных\n    const saveRequests = items.map(item => fetch(`${ApiUrl}/api/SaveOrder`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(item)\n    }));\n    await Promise.all(saveRequests);\n    console.log(\"Все элементы успешно отправлены\");\n\n    // Очистка корзины и перенаправление пользователя\n    localStorage.removeItem(\"basketItem\");\n    localStorage.removeItem(\"cart\");\n    window.location.href = \"/DefineUser\";\n  } catch (error) {\n    console.error(\"Ошибка при добавлении заказа:\", error);\n  }\n};\nexport default addOrder;","map":{"version":3,"names":["ApiUrl","v4","uuidv4","addOrder","props","token","localStorage","getItem","numberOrderResponse","fetch","method","headers","ok","Error","status","numberOrder","text","userResponse","body","JSON","stringify","userData","json","guidId","message","orderGuidId","items","map","item","GuidIdUser","GuidIdOrder","GuidIdItem","VendorCode","vendorCode","NameItem","name","PriceItem","parseInt","price","ImageItem","image","QuantityItem","quantity","NumberOrder","console","log","saveRequests","Promise","all","removeItem","window","location","href","error"],"sources":["/home/gubinvs/ENCOMPONENT/shop/src/Basket/AddOrder.js"],"sourcesContent":["import ApiUrl from '../js/ApiUrl.js';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst addOrder = async (props) => {\n    const token = localStorage.getItem(\"token\");\n    if (!token) return;\n\n    try {\n    // Получение номера заказа\n    const numberOrderResponse = await fetch(`${ApiUrl}/api/NumberOrder`, {\n        method: \"GET\",\n        headers: {\n        \"Content-Type\": \"application/json\",\n        },\n    });\n\n    if (!numberOrderResponse.ok) {\n        throw new Error(`Ошибка HTTP: ${numberOrderResponse.status}`);\n    }\n\n    const numberOrder = await numberOrderResponse.text(); // Предполагаем, что ответ текстовый\n\n    // Получение GUID пользователя\n    const userResponse = await fetch(`${ApiUrl}/api/DefineUserGuidId`, {\n        method: \"POST\",\n        headers: {\n        \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ token }),\n    });\n\n    if (!userResponse.ok) {\n        throw new Error(`Ошибка HTTP: ${userResponse.status}`);\n    }\n\n    const userData = await userResponse.json();\n    const guidId = userData.message;\n\n    if (!guidId) {\n        throw new Error(\"GUID пользователя не найден в ответе\");\n    }\n\n    const orderGuidId = uuidv4(); // Уникальный идентификатор заказа\n\n    // Формирование данных для отправки\n    const items = props.map((item) => ({\n        GuidIdUser: guidId,\n        GuidIdOrder: orderGuidId,\n        GuidIdItem: item.guidId,\n        VendorCode: item.vendorCode,\n        NameItem: item.name,\n        PriceItem: parseInt(item.price, 10),\n        ImageItem: item.image,\n        QuantityItem: parseInt(item.quantity, 10),\n        NumberOrder: parseInt(numberOrder),\n    }));\n\n    console.log(\"Отправляемые на сервер данные\" + JSON.stringify(items));\n\n    // Отправка данных\n    const saveRequests = items.map((item) =>\n        fetch(`${ApiUrl}/api/SaveOrder`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(item),\n        })\n    );\n\n    await Promise.all(saveRequests);\n\n    console.log(\"Все элементы успешно отправлены\");\n\n    // Очистка корзины и перенаправление пользователя\n    localStorage.removeItem(\"basketItem\");\n    localStorage.removeItem(\"cart\");\n    window.location.href = \"/DefineUser\";\n\n    } catch (error) {\n        console.error(\"Ошибка при добавлении заказа:\", error);\n    }\n};\n\nexport default addOrder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}