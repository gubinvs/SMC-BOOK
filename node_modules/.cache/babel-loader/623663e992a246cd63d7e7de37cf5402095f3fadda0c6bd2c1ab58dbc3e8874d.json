{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport ApiUrl from '../js/ApiUrl.js';\nconst FullOrderInformation = numberOrder => {\n  // Всплывающее окно с полной информацией о заказе, компании и пользователе\n\n  fetch(`${ApiUrl}/api/OrderDetails/${numberOrder}`).then(response => response.json()).then(data => {\n    // Оформляем данные о товарах\n    const orderDetails = data.orders.map(order => `\n        <tr>\n            <td>${order.vendorCode}</td>\n            <td>${order.nameItem}</td>\n            <td>${order.priceItem} руб.</td>\n            <td>${order.quantityItem}</td>\n            <td>${order.dataOrder}</td>\n            <td>${order.statusOrder}</td>\n        </tr>\n        `).join(\"\");\n\n    // Информация о пользователе\n    const userDetails = `\n        <h2>Информация о пользователе</h2>\n        <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n            <tr><td><strong>Имя:</strong></td><td>${data.user.nameUser}</td></tr>\n            <tr><td><strong>Email:</strong></td><td>${data.user.email}</td></tr>\n            <tr><td><strong>Телефон:</strong></td><td>${data.user.phoneUser}</td></tr>\n        </table>\n        `;\n\n    // Информация о компании, если она есть\n    const company = data.company || {\n      nameCompany: \"Нет данных\",\n      innCompany: \"Нет данных\",\n      adressCompany: \"Нет данных\",\n      phoneCompany: \"Нет данных\"\n    };\n    const companyDetails = `\n        <h2>Информация о компании</h2>\n        <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n            <tr><td><strong>Компания:</strong></td><td>${company.nameCompany}</td></tr>\n            <tr><td><strong>ИНН:</strong></td><td>${company.innCompany}</td></tr>\n            <tr><td><strong>Адрес:</strong></td><td>${company.adressCompany}</td></tr>\n            <tr><td><strong>Телефон:</strong></td><td>${company.phoneCompany}</td></tr>\n        </table>\n        `;\n\n    // Создаем окно с результатами\n    const width = window.screen.width;\n    const height = window.screen.height * 0.9;\n    const newWindow = window.open(\"\", \"_blank\", `width=${width},height=${height}`);\n    // const newWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n    newWindow.document.write(`\n        <html>\n            <head>\n            <title>Детали заказа</title>\n            <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                h1 { color: #2C3E50; }\n                h2 { color: #2980B9; }\n                table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n                table, th, td { border: 1px solid #BDC3C7; }\n                th, td { padding: 10px; text-align: left; }\n                th { background-color: #ECF0F1; }\n            </style>\n            </head>\n            <body>\n            <h1>Детали заказа №${numberOrder}</h1>\n            ${userDetails}\n            ${companyDetails}\n            <h2>Товары в заказе</h2>\n            <table>\n                <thead>\n                <tr>\n                    <th>Артикул</th>\n                    <th>Название товара</th>\n                    <th>Цена</th>\n                    <th>Количество</th>\n                    <th>Дата заказа</th>\n                    <th>Статус</th>\n                </tr>\n                </thead>\n                <tbody>\n                ${orderDetails}\n                </tbody>\n            </table>\n            </body>\n        </html>\n        `);\n    newWindow.document.close();\n  }).catch(error => {\n    console.error(\"Ошибка при запросе:\", error);\n    alert(\"Произошла ошибка при получении данных компонентом React.\");\n  });\n};\n_c = FullOrderInformation;\nexport default FullOrderInformation;\nvar _c;\n$RefreshReg$(_c, \"FullOrderInformation\");","map":{"version":3,"names":["React","useState","useEffect","ApiUrl","FullOrderInformation","numberOrder","fetch","then","response","json","data","orderDetails","orders","map","order","vendorCode","nameItem","priceItem","quantityItem","dataOrder","statusOrder","join","userDetails","user","nameUser","email","phoneUser","company","nameCompany","innCompany","adressCompany","phoneCompany","companyDetails","width","window","screen","height","newWindow","open","document","write","close","catch","error","console","alert","_c","$RefreshReg$"],"sources":["/home/gubinvs/ENCOMPONENT/shop/src/PersonalSpace/FullOrderInformation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ApiUrl from '../js/ApiUrl.js';\n\n\n\nconst FullOrderInformation = (numberOrder) => {\n\n    // Всплывающее окно с полной информацией о заказе, компании и пользователе\n\n   \n    fetch(`${ApiUrl}/api/OrderDetails/${numberOrder}`)\n    .then(response => response.json())\n    .then(data => {\n        // Оформляем данные о товарах\n        const orderDetails = data.orders.map(order => `\n        <tr>\n            <td>${order.vendorCode}</td>\n            <td>${order.nameItem}</td>\n            <td>${order.priceItem} руб.</td>\n            <td>${order.quantityItem}</td>\n            <td>${order.dataOrder}</td>\n            <td>${order.statusOrder}</td>\n        </tr>\n        `).join(\"\");\n\n        // Информация о пользователе\n        const userDetails = `\n        <h2>Информация о пользователе</h2>\n        <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n            <tr><td><strong>Имя:</strong></td><td>${data.user.nameUser}</td></tr>\n            <tr><td><strong>Email:</strong></td><td>${data.user.email}</td></tr>\n            <tr><td><strong>Телефон:</strong></td><td>${data.user.phoneUser}</td></tr>\n        </table>\n        `;\n\n        // Информация о компании, если она есть\n        const company = data.company || {\n        nameCompany: \"Нет данных\",\n        innCompany: \"Нет данных\",\n        adressCompany: \"Нет данных\",\n        phoneCompany: \"Нет данных\"\n        };\n\n        const companyDetails = `\n        <h2>Информация о компании</h2>\n        <table border=\"1\" cellspacing=\"0\" cellpadding=\"5\">\n            <tr><td><strong>Компания:</strong></td><td>${company.nameCompany}</td></tr>\n            <tr><td><strong>ИНН:</strong></td><td>${company.innCompany}</td></tr>\n            <tr><td><strong>Адрес:</strong></td><td>${company.adressCompany}</td></tr>\n            <tr><td><strong>Телефон:</strong></td><td>${company.phoneCompany}</td></tr>\n        </table>\n        `;\n\n        // Создаем окно с результатами\n        const width = window.screen.width;\n        const height = window.screen.height * 0.9;\n    const newWindow = window.open(\"\", \"_blank\", `width=${width},height=${height}`);\n        // const newWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n        newWindow.document.write(`\n        <html>\n            <head>\n            <title>Детали заказа</title>\n            <style>\n                body { font-family: Arial, sans-serif; margin: 20px; }\n                h1 { color: #2C3E50; }\n                h2 { color: #2980B9; }\n                table { width: 100%; border-collapse: collapse; margin-top: 20px; }\n                table, th, td { border: 1px solid #BDC3C7; }\n                th, td { padding: 10px; text-align: left; }\n                th { background-color: #ECF0F1; }\n            </style>\n            </head>\n            <body>\n            <h1>Детали заказа №${numberOrder}</h1>\n            ${userDetails}\n            ${companyDetails}\n            <h2>Товары в заказе</h2>\n            <table>\n                <thead>\n                <tr>\n                    <th>Артикул</th>\n                    <th>Название товара</th>\n                    <th>Цена</th>\n                    <th>Количество</th>\n                    <th>Дата заказа</th>\n                    <th>Статус</th>\n                </tr>\n                </thead>\n                <tbody>\n                ${orderDetails}\n                </tbody>\n            </table>\n            </body>\n        </html>\n        `);\n        newWindow.document.close();\n    })\n    .catch(error => {\n        console.error(\"Ошибка при запросе:\", error);\n        alert(\"Произошла ошибка при получении данных компонентом React.\");\n    });\n};\n\nexport default FullOrderInformation;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,iBAAiB;AAIpC,MAAMC,oBAAoB,GAAIC,WAAW,IAAK;EAE1C;;EAGAC,KAAK,CAAC,GAAGH,MAAM,qBAAqBE,WAAW,EAAE,CAAC,CACjDE,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;IACV;IACA,MAAMC,YAAY,GAAGD,IAAI,CAACE,MAAM,CAACC,GAAG,CAACC,KAAK,IAAI;AACtD;AACA,kBAAkBA,KAAK,CAACC,UAAU;AAClC,kBAAkBD,KAAK,CAACE,QAAQ;AAChC,kBAAkBF,KAAK,CAACG,SAAS;AACjC,kBAAkBH,KAAK,CAACI,YAAY;AACpC,kBAAkBJ,KAAK,CAACK,SAAS;AACjC,kBAAkBL,KAAK,CAACM,WAAW;AACnC;AACA,SAAS,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC;;IAEX;IACA,MAAMC,WAAW,GAAG;AAC5B;AACA;AACA,oDAAoDZ,IAAI,CAACa,IAAI,CAACC,QAAQ;AACtE,sDAAsDd,IAAI,CAACa,IAAI,CAACE,KAAK;AACrE,wDAAwDf,IAAI,CAACa,IAAI,CAACG,SAAS;AAC3E;AACA,SAAS;;IAED;IACA,MAAMC,OAAO,GAAGjB,IAAI,CAACiB,OAAO,IAAI;MAChCC,WAAW,EAAE,YAAY;MACzBC,UAAU,EAAE,YAAY;MACxBC,aAAa,EAAE,YAAY;MAC3BC,YAAY,EAAE;IACd,CAAC;IAED,MAAMC,cAAc,GAAG;AAC/B;AACA;AACA,yDAAyDL,OAAO,CAACC,WAAW;AAC5E,oDAAoDD,OAAO,CAACE,UAAU;AACtE,sDAAsDF,OAAO,CAACG,aAAa;AAC3E,wDAAwDH,OAAO,CAACI,YAAY;AAC5E;AACA,SAAS;;IAED;IACA,MAAME,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACF,KAAK;IACjC,MAAMG,MAAM,GAAGF,MAAM,CAACC,MAAM,CAACC,MAAM,GAAG,GAAG;IAC7C,MAAMC,SAAS,GAAGH,MAAM,CAACI,IAAI,CAAC,EAAE,EAAE,QAAQ,EAAE,SAASL,KAAK,WAAWG,MAAM,EAAE,CAAC;IAC1E;IACAC,SAAS,CAACE,QAAQ,CAACC,KAAK,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiCnC,WAAW;AAC5C,cAAciB,WAAW;AACzB,cAAcU,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBrB,YAAY;AAC9B;AACA;AACA;AACA;AACA,SAAS,CAAC;IACF0B,SAAS,CAACE,QAAQ,CAACE,KAAK,CAAC,CAAC;EAC9B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACZC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3CE,KAAK,CAAC,0DAA0D,CAAC;EACrE,CAAC,CAAC;AACN,CAAC;AAACC,EAAA,GAhGI1C,oBAAoB;AAkG1B,eAAeA,oBAAoB;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}